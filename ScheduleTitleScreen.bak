import React, {PropsWithChildren} from "react";
import {CukiHiddenInput} from "../../../components/CukiInput";
import styled from "styled-components/native";
import {Keyboard, Platform, Text, View} from "react-native";
import {mainColor} from "../../../components/ColorCode";
import RNDateTimePicker from "@react-native-community/datetimepicker";

const inputStyle = {
    fontSize: 32,
    marginBottom: 10,
    marginLeft: 32
}

const MainContainer = styled.KeyboardAvoidingView`
  flex: 1;
`

const DefaultContainer = styled.KeyboardAvoidingView`
  flex: 1;
  width: 100%;
  background-color: white;
  flex-direction: column;
  justify-content: center;
  padding: 20px 0;
`

const OverlayContainer = styled.KeyboardAvoidingView`
  position: absolute;
  flex: 1;
  flex-direction: column;
  width: 100%;
  height: 200%;
  background: rgba(0, 0, 0, 0.5);
`

const OverlayItem = styled.TouchableOpacity`
  flex: 1;
`

type DefaultProps = {
    style?: any,
    onPress?: () => void
}

const BottomSheetItem = (props?: PropsWithChildren<DefaultProps>) => {
    return (
        <OverlayItem style={{...props?.style}} onPress={props?.onPress}>
            {props?.children}
        </OverlayItem>
    )
}

const BottomSheetContainer = (props?: PropsWithChildren<DefaultProps>) => {
    return (
        <OverlayContainer>
            {props?.children}
        </OverlayContainer>
    )
}

type Mode = 'date' | 'time' | undefined

const ScheduleRegistrationScreen = () => {
    const [startDate, setStartDate] = React.useState(new Date());
    const [mode, setMode] = React.useState<Mode>('date');
    const [datepickerVisible, setDatePickerVisible] = React.useState(false);

    const onChange = (event: any, selectedDate: any = undefined) => {
        const currentDate = selectedDate || startDate;
        setDatePickerVisible(Platform.OS === 'ios');
        setStartDate(currentDate);
    };

    const showMode = (currentMode: any) => {
        setDatePickerVisible(true);
        setMode(currentMode);
    };

    const showDatepicker = () => {
        showMode('date');
    };

    const showTimepicker = () => {
        showMode('time');
    };

    const [titleComplete, setTitleComplete] = React.useState(false)
    const [title, setTitle] = React.useState('')
    return (
        <MainContainer>
            <DefaultContainer>
                {titleComplete &&
                <CukiHiddenInput
                    autoFocus={true}
                    multiline={false}
                    placeholder={"시작 날짜를 정해주세요."}
                    style={inputStyle}
                    onFocus={() => {
                        Keyboard.dismiss()
                        setDatePickerVisible(true)
                    }}
                />
                }
                <CukiHiddenInput
                    multiline={false}
                    placeholder={"어떤 일정인가요?"}
                    style={inputStyle}
                    onChangeText={setTitle}
                    onEndEditing={() => {
                        setTitleComplete(true)
                    }}
                />
                {datepickerVisible &&
                <BottomSheetContainer>
                    <BottomSheetItem onPress={() => {
                        setDatePickerVisible(false)
                    }}/>
                    <BottomSheetItem style={{
                        backgroundColor: 'white',
                        borderTopLeftRadius: '16px',
                        borderTopRightRadius: '16px'
                    }}>
                        <View style={{
                            flex: 1,
                            flexDirection: 'row',
                            justifyContent: 'space-between',
                            paddingTop: 20,
                            paddingLeft: 20,
                            paddingRight: 20,
                        }}>
                            <Text
                                onPress={() => {
                                    setDatePickerVisible(false)
                                }}
                                style={{
                                    fontSize: 18,
                                    fontWeight: 'bold',
                                }}
                            >취소</Text>
                            <Text style={{fontSize: 20, fontWeight: 'bold'}}>
                                {mode === 'time' ? '시간설정' : '날짜설정'}
                            </Text>
                            <Text
                                onPress={() => {
                                    if (mode === 'date') {
                                        showMode('time')
                                    } else {
                                        setDatePickerVisible(false)
                                    }
                                }}
                                style={{
                                    fontSize: 18,
                                    fontWeight: 'bold',
                                    color: `${mainColor}`
                                }}
                            >{mode === 'time' ? '완료' : '다음'}</Text>
                        </View>
                        <View style={{
                            padding: 50
                        }}>
                            <RNDateTimePicker
                                testID="dateTimePicker"
                                value={startDate}
                                mode={mode}
                                is24Hour={true}
                                display="spinner"
                                onChange={onChange}
                            />
                        </View>
                    </BottomSheetItem>
                </BottomSheetContainer>}
            </DefaultContainer>
        </MainContainer>
    )
}

export default ScheduleRegistrationScreen
